// GetVideo
template-macro-def (GetVideo_SelectCategory) {
	params {
		param (size) {
			type (viv.core.Integer)
			min (Required) max (One)
		}
	}
	content {
		choose (Random) {
			template ("보고 싶은 동화를 선택해주세요.") {
				speech (" 카테고리는 총 #{size}개가 있어요. 보고 싶은 동화를 선택해주세요.")
			}
			template ("보고 싶은 동화를 선택해주세요!"){
				speech (" 카테고리는 모두 #{size}개가 있어요. 보고 싶은 동화를 선택해주세요.")
			}
		}
	}
}

template-macro-def (GetVideo_Progress) {
	content {
		choose (Random) {
			template ("동화를 찾고 있어요.")
		}
	}
}

template-macro-def (GetCategory_Progress) {
	content {
		choose (Random) {
			template ("동화 목록을 불러오고 있어요.")
			template ("동화 목록을 찾고 있어요.")
		}
	}
}

template-macro-def (GetVideo_Result_SearchTerm) {
	params {
		param (searchTerm) {
			type (SearchTerm)
			min (Required) max (One)
		}
		param (size) {
			type (viv.core.Integer)
			min (Required) max (One)
		}
	}
	content {
		choose (Random) {
			template ("#{value(searchTerm)}(으)로 검색한 동화 #{size}개가 있어요.")
		}
	}
}

template-macro-def (GetVideo_Result_Category) {
	params {
		param (category) {
			type (VideoCategory)
			min (Required) max (One)
		}
		param (size) {
			type (viv.core.Integer)
			min (Required) max (One)
		}
	}
	content {
		choose (Random) {
			template ("#{value(category)} 동화 #{size}개를 확인해보세요.")
			template ("#{value(category)} 동화 #{size}개를 찾았어요!")
		}
	}
}

template-macro-def (GetVideo_Result_One) {
	content {
		choose (Random) {
			template ("여기 있어요!")
		}
	}
}

template-macro-def (GetVideo_Result_Zero) {
	content {
		choose (Random) {
			template ("키즈비에 아직 준비되지 않은 동화예요. 더 많은 동화를 준비할 수 있도록 노력할게요.")
			template ("해당 동화를 찾지 못했어요. 더 많은 동화를 준비할 수 있도록 노력할게요.")
		}
	}
}

template-macro-def (GetRandomVideo_Result) {
	content {
		choose (Random) {
			template ("키즈비가 추천하는 동화예요!")
			template ("키즈비가 들려주고 싶은 동화를 확인해보세요!")
		}
	}
}

template-macro-def (SelectVideoInfo_Result) {
	params {
		param (filterTerm) {
			type (FilterTerm)
			min (Required) max (One)
		}
	}
	content {
		choose (Random) {
			template ("#{value(filterTerm)}(으)로 검색한 동화예요.")
		}
	}
}

template-macro-def (SelectVideoInfo_No_Result) {
	params {
		param (filterTerm) {
			type (FilterTerm)
			min (Required) max (One)
		}
	}
	
	content {
		choose (Random) {
			template ("#{value(filterTerm)}로 검색한 동화가 없네요. 다시 말해주세요.")
		}
	}
}

template-macro-def (List_Navigate_Underflow) {
	content {
		choose (Random) {
			template ("이전 목록이 없네요.")
		}
	}
}

template-macro-def (List_Navigate_Overflow) {
	content {
		choose (Random) {
			template ("모두 확인했어요.")
		}
	}
}

template-macro-def (List_Navigate_question) {
	content {
		choose (Random) {
			template ("더 알려줄까요?")
		}
	}
}

template-macro-def (List_Navigate_item_Question) {
	content {
		choose (Random) {
			template ("어떤 것을 선택할까요?")
		}
	}
}

template-macro-def (List_Navigate_overflow_Question) {
	content {
		choose (Random) {
			template ("어떤 것을 선택할까요?")
		}
	}
}

template-macro-def (ShowQuizAnswer_Button) {
	content {
		choose (Random) {
			template ("정답 알려줘")
		}
	}
}

template-macro-def (StartQuiz_PgressResut_Message_HandsFree) {
	content {
		choose (Random) {
			template ("문제와 답을 모두 보여드릴게요. 직접 확인해보세요!")
		}
	}
}

template-macro-def (ShowQuinzAnswer_Message) {
	content {
		choose (Random) {
			template ("정답을 확인해보세요. 다른 문제의 정답도 같이 알려드릴게요.")
		}
	}
}
// GetCategory
template-macro-def (GetCategory_Result) {
	params {
		param (size) {
			type (viv.core.Integer)
			min (Required) max (One)
		}
	}
	content {
		choose (Random) {
			template ("카테고리는 총 #{size}개가 있어요. 이 중에 어떤 동화를 보여드릴까요?")
			template ("준비된 카테고리는 총 #{size}개가 있어요. 보고 싶은 동화를 선택 해주세요!")
		}
	}
}

// GetQuiz
template-macro-def (GetQuiz_SelectQuizCategory) {
	content {
		choose (Random) {
			// template ("어떤 문제 목록을 보고 싶어요?")
			template ("퀴즈 카테고리를 선택해주세요.")
		}
	}
}

template-macro-def (GetQuiz_Category_Result) {
	params {
		param (size) {
			type (viv.core.Integer)
			min (Required) max (One)
		}
	}
	content {
		choose (Random) {
			// &nbsp; <br /> \n
			template ("카테고리로 검색한 문제 #{size}개를 찾았어요.") {
				speech ("카테고리로 검색한 문제 #{size}개를 찾았어요.")
			}
			template ("해당 카테고리에 문제가  #{size}개 있네요.") {
				speech ("해당 카테고리에 문제가 #{size}개 있네요.")
			}
		}
	}
}

template-macro-def (GetQuiz_Result_Zero) {
	content {
		choose (Random) {
			template ("키즈비에 준비가 된 문제가 없어요.")
		}
	}
}

template-macro-def (GetQuiz_Result_One) {
	content {
		choose (Random) {
			template ("여기 있어요!")
		}
	}
}

template-macro-def (GetQuiz_Result_Multi) {
	params {
		param (size) {
			type (viv.core.Integer)
			min (Required) max (One)
		}
		param (category) {
			type (QuizCategory)
			min (Required) max (One)
		}
	}
	content {
		choose (Random) {
			template ("#{value(category)} #{size}개를 찾았어요. 이미지를 눌러 학습 카드를 확인해보세요.")
		}
	}
}

//StartQuiz
template-macro-def (StartQuiz_PrgressResut_Message) {
	content {
		choose (Random) {
			template ("모든 문제를 다 풀었어요. 결과를 확인해보세요.")
		}
	}
}

template-macro-def (StartQuiz_Stop){
	content {
		choose (Random) {
			template("퀴즈 그만하기")
		}
	}
}

template-macro-def (StartQuiz_Cancel){
	content {
		choose (Random) {
			template("네, 퀴즈를 그만 할게요.")
			template("네, 퀴즈를 여기까지만 할게요.")
		}
	}
}

template-macro-def (QuizInfo_Handsfree) {
	params{
		param (quizInfo) {
			type (QuizInfo)
		}
	}
	content {
		choose (Random){
			if(exists(quizInfo.question)){
				template ("#{value(quizInfo.question)}") {
					speech ("#{value(quizInfo.question)} 1번 #{value(quizInfo.options[0])} 2번 #{value(quizInfo.options[1])} 3번 #{value(quizInfo.options[2])} 4번 #{value(quizInfo.options[3])}")
				}
			}
		}
	}
}
// etc
template-macro-def (GoToYoutube) {
	content {
		template ("YouTube에서 보기")
	}
}

template-macro-def (OpenVideo_Youtube_Progress) {
	content {
		choose (Random) {
			// template ("더 노력하는  키즈비가 될게요. Youtube에서 시청 해주세요.")
			template ("Youtube로 연결해 드릴게요!")
		}
	}
}

template-macro-def (Answer_Is) {
	content {
		template ("정답은")
	}
}

template-macro-def (GetQuiz_Progress) {
	content {
		template ("퀴즈를 찾고 있어요.")
	}
}

template-macro-def (UpdateProgress_Progress) {
	content {
		template ("정답 확인 중..")
	}
}

template-macro-def (InitQuizProgress_Progress) {
	content {
		template ("퀴즈 가져오는 중..")
	}
}

template-macro-def (ReTryQuiz_No_QuizInfos) {
	content {
		template ("틀린 퀴즈가 없어요.")
	}
}

template-macro-def (NoVideoInfo) {
	content {
		template ("동화 정보가 없어요.")
	}
}